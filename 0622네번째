  o 오라클에서의 객체
    테이블(table)
      - 데이터가 저장되는 곳
    인덱스(index)
      - 테이블의 검색 효율을 높이기 위해 사용 (책의 INDEX)
    뷰(view)
      - 하나 또는 여러 개의 테이블에서 선택한 컬럼으로 생성해서 만든 테이블
    시퀀스(sequence)
      - 테이블 생성 시 일련 번호를 생성해 줌
    시노님(synonym)
      - 오라클 객체의 별칭(다른 이름)을 지정함
    프로시저(procedure)
      - 일련의 작업 절차를 정리해서 저장한 것 (리턴 값 X)
      - 여러 SQL문을 묶어서 미리 정의해 두고 하나의 요청으로 실행할 수 있음.
    함수(function)
      - 일련의 작업 절차를 정리해서 저장한 것 (리턴 값 O)
      - 여러 SQL문을 묶어서 미리 정의해 두고 하나의 요청으로 실행할 수 있음.
    패키지(package)
      - 관련 있는 프로시저와 함수를 저장함.
    트리거(trigger)
      - 테이블에 대한 특정 이벤트(INSERT, UPDATE, DELETE)에 반응해 자동으로 실행되는 작업
  o 제약 조건
      - 데이터의 무결성을 지키기 위해 제한된 조건
      - 테이블 및 열(컬럼) 레벨에서 적용하며, 테이블 생성, 테이블 구조 변경 에서 적용 할 수 있다.
      - 데이터 무결성은 데이터베이스에 저장되는 데이터는 테이블에 부적절한 데이타가 입력되는 것을 제한하여
      - 데이터의 정확성과 일관성을 보장한다.
      - NOT NULL: NULL(데이터가 없음)을 허용하지 않는다. 
      - UNIQUE: 테이블 내에서 해당 컬럼 값이 유일하도록 설정 (중복 불가능)
      - PRIMARY KEY(기본키): 테이블에서 각 행을 고유하게 식별하는 값으로 테이블에서 유일하게 하나만 있는 값 (NOT NULL +  UNIQUE)
      - FOREIGN KEY(외래키): 두 테이블과 관계를 맺고 연결을 설정하고 테이블에 저장될 수 있는 데이터를 제어
      - CHECK: 저장 가능한 데이터 값의 범위나 조건을 지정하여 설정한 값만을 허용
      - DEFAULT: 데이터 입력 시 아무 값을 넣지 않으면 설정한 기본값으로 입력
      - 영역 무결성(domain integrity) : 열에 저장되는 값의 적정 여부를 확인, 자료형, 적절한 형식의 데이터, NULL 여부같은 정해 놓은 범위를 만족하는 데이터임을 규정
      - 개체 무결성(entity integrity) : 테이블 데이터를 유일하게 식별할 수 있는 기본키는 반드시 값을 가지고 있어야 하며, NULL이 될 수 없고 중복될 수도 없음을 규정
      - 참조 무결성(referential integrity) : 참조 테이블의 외래키 값은 참조 테이블의 기본키로서 존재해야 하며 NULL이 가능
 ○제약 조건 확인
      - USER_CONSTRAINTS: 데이터 딕셔너리 뷰로 제약 조건에 관한 정보가 저장되어 있다. (테이블을 할 때 자동으로 저장)
      - CONSTRAINT_NAME 컬럼: 제약 조건의 이름
      - CONSTRAINT_TYPE 컬럼: 제약 조건의 유형 
      - P: PRIMARY KEY
      - R: FOREIGN KEY
      - U: UNIQUE
      - C: CHECK, NOT NULL
      - TABLE_NAME 컬럼: 제약 조건이 속한 테이블명
      - 테이블 생성하면서 제약조건 설정:     
          CREATE TABLE <테이블명> (
            <컬럼명> <데이터 타입> CONSTRAINT <제약조건이름> <제약조건>
          ); 
      - 테이블 생성후 제약조건 설정:
          ALTER TABLE <테이블명> MODIFY <제약조건이름> <제약조건>;
          ALTER TABLE <테이블명> ADD CONSTRAINT <제약조건이름> <제약조건>(컬럼명);
      - NOT NULL추가시 MODIFY를 쓰는것이 좋다
      - 제약조건을 변경할려면 삭제후 다시 추가
 ○ 코멘트 설정
      - COMMENT ON TABLE <테이블명> IS '<설명>';
      - COMMENT ON COLUMN <테이블명>.<컬러명> IS '<설명>';
 ○ 시퀀스 생성
      - 시퀀스를 생성할 때 옵션을 생략하면 1씩 증가하는 값으로 설정된다.
      - MAXVALUE는 생각할 필요도 없다. 이유는 MAXVALUE 옵션을 생략하면 9999999999999999999999999999 <-- 요 숫자의 값을 갖기 때문이다.
      - CREATE SEQUENCE <시권스명>
 ○ 데이터 추가
      - INSERT INTO <테이블명> VALUES(값 ...);
      - INSERT INTO <테이블명> (컬럼명 , …) VALUES (데이터, …);
 ○ 데이터 수정
      - UPDATE <테이블명> SET <바꿀 데이터의 컬럼명> = <바꿀 값> <WHERE 조건 생략가능>
 ○ 데이터 삭제
      - DELETE FROM <테이블명> <WHERE조건> --> WHERE조건에 해당하는 것만 삭제
      
